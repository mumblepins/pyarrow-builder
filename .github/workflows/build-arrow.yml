name: "Build Arrow"
on:
  push:
    branches:
      - main
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker:
    strategy:
      matrix:
        platform:
          - amd64
          - arm64
        python_version: [ "3.9","3.10" ,"3.11" ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      #
      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2
      - name: Setup Qemu
        uses: docker/setup-qemu-action@v2
      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      #      - name: Docker meta
      #        id: meta
      #        uses: docker/metadata-action@v4
      #        with:
      #          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          #          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.python_version }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.python_version }}-${{matrix.platform}}
          #          labels: ${{ steps.meta.outputs.labels }}
          #          outputs: type=image,name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true
          #          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=docker-${{matrix.python_version}}-${{matrix.platform}}
          cache-to: type=gha,mode=max,scope=docker-${{matrix.python_version}}-${{matrix.platform}}
          platforms: linux/${{matrix.platform}}
          build-args: VERSION=${{ matrix.python_version }}

#  build:
#    needs: [ docker ]
#    runs-on: ubuntu-latest
#    permissions:
#      contents: write
#    strategy:
#      matrix:
#        platform:
#          - amd64
#          - arm64
#        arrow_version:
#          - 10.0.1
#        #          - 11.0.0
#        #          - 12.0.0
#        python_version:
#          - "3.9"
#    #          - "3.10"
#    #    container: ghcr.io/mumblepins/pyarrow-builder:${{matrix.python_version}}
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Setup Docker buildx
#        uses: docker/setup-buildx-action@v2
#      - name: Setup Qemu
#        uses: docker/setup-qemu-action@v2
#      - name: run build
#        run: >
#          docker run --rm
#          --platform linux/${{matrix.platform}}
#          -v "${PWD}:/build"
#          --workdir /build
#          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.python_version }}-${{matrix.platform}}
#          ./builder.sh ${{matrix.arrow_version}} ${{matrix.python_version}}
#
##      - uses: uraimo/run-on-arch-action@v2
##        name: Build artifact
##        id: build
##        with:
##          base_image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.python_version }}-${{matrix.platform}}
##          setup: |
##            mkdir -p "${PWD}/artifacts"
##
##            # Mount the artifacts directory as /artifacts in the container
##          dockerRunArgs: |
##            --volume "${PWD}/artifacts:/artifacts"
##          run: |
##            ./builder.sh ${{matrix.arrow_version}} ${{matrix.python_version}}
##            cp dist/pyarrow*.zip /artifacts/
##            ls -atlhr /artifacts/
#          # Not required, but speeds up builds
#      #          githubToken: ${{ github.token }}
#
#      #      - name: build
#      #        run: ./builder.sh ${{matrix.arrow_version}} ${{matrix.python_version}}
#      - name: Archive built library
#        uses: actions/upload-artifact@v3
#        with:
#          name: pyarrow-${{matrix.arrow_version}}-py${{matrix.python_version}}-${{matrix.platform}}
#          path: dist/pyarrow*.zip
#
#      - uses: ncipollo/release-action@v1
#        with:
#          allowUpdates: true
#          artifacts: "dist/pyarrow*.zip"
#          makeLatest: true
#          omitBody: true
#          prerelease: true
#          tag: latest
